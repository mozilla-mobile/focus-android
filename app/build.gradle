apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "org.mozilla"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }

    dexOptions {
        preDexLibraries true
    }

    // We have a three dimensional build configuration:
    // BUILD TYPES (debug, beta, release) X PRODUCT FLAVOR (focus, klar) X ENGINE FLAVOR (webkit, gecko(

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        beta {
            initWith debug

            applicationIdSuffix ".beta"
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }

    flavorDimensions "product", "engine"

    productFlavors {
        // In most countries we are Firefox Focus - but in some we need to be Firefox Klar
        focus {
            dimension "product"

            applicationIdSuffix ".focus"
        }
        klar {
            dimension "product"

            applicationIdSuffix ".klar"
        }

        // We can build with two engines: webkit or gecko
        webkit {
            dimension "engine"
        }

        gecko {
            dimension "engine"

            applicationIdSuffix ".gecko"
        }
    }

    variantFilter { variant ->
        def flavors = variant.flavors*.name
        // We only need a gecko debug build for now.
        if (flavors.contains("gecko") && (variant.buildType.name != "debug" || flavors.contains("klar"))) {
            setIgnore(true)
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'com.android.support:customtabs:25.1.1'
    compile 'com.android.support:design:25.1.1'

    geckoCompile(name: 'geckoview-195049fabb7a', ext: 'aar')

    testCompile 'junit:junit:4.12'
    testCompile "org.robolectric:robolectric:3.1.4"
}

task buildBlocklists(type:Exec) {
    workingDir '..'

    commandLine 'python', 'build-disconnect.py'
}

tasks.whenTaskAdded { task ->
    def name = task.name
    if (name.contains("generate") && name.contains("Config") && name.contains("Webkit")) {
        task.dependsOn buildBlocklists
    }
}
