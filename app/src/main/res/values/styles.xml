<?xml version="1.0" encoding="utf-8"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
<resources>
    <style name="AppTheme" parent="Theme.AppCompat.NoActionBar">
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>

        <item name="android:windowContentTransitions">true</item>

        <item name="popupMenuStyle">@style/PopupMenu</item>

        <item name="android:statusBarColor">@android:color/transparent</item>
    </style>

    <style name="DialogTitleStyle" parent="TextAppearance.AppCompat.Title">
        <item name="android:textColor">#FFFFFF</item>
        <item name="android:textSize">20sp</item>
        <item name="android:fontFamily">@string/font_roboto_medium</item>
    </style>

    <!-- Setting this via alertDialogStyle in AppTheme results in crashes. You need to
         explicitly select this via "new AlertDialog.Builder(activity, R.style.DialogStyle)"
         We need this style because the accent colour for the MainActivity is purple,
         but we want different accents in the dialog. -->
    <style name="DialogStyle" parent="Theme.AppCompat.Dialog.Alert">
        <item name="colorAccent">#FF00A4DC</item>
        <item name="android:windowTitleStyle">@style/DialogTitleStyle</item>
        <item name="dialogPreferredPadding">24dp</item>
    </style>

    <style name="SettingsTheme" parent="Theme.AppCompat.NoActionBar">
        <item name="colorAccent">@color/colorAccentSettings</item>
        <item name="actionButtonStyle">@style/SettingsActionButtonStyle</item>
    </style>

    <style name="SettingsActionButtonStyle" parent="@style/Widget.AppCompat.ActionButton">
        <!-- We want 16dp of padding between (i) and "SAVE" on the "Add search engine" Toolbar.
             Unfortunately, this Toolbar is shared across all of settings. Solutions:
             1) (Current solution) Change the toolbar styles for all of settings
             2) Dynamically change the styles for the Toolbar, in code, for this one Settings screen
             3) Provide a unique toolbar for this one Settings screen

             I opted for 1) because it's simple (we're pressed for time!) and no other screens have more
             than one action button and are affected. This isn't very future proof, however.

             We set paddingEnd=12dp to preserve the existing padding of the right-most action menu item to
             the edge of the device (12dp) and set paddingStart=4dp to complete the 16dp between views.
             We then set minWidth=0dp to avoid it's calculations affecting visible padding.

             One concern I have is that paddingStart=4dp will cause the title to get too close to the
             action menu items, but testing with German, that doesn't seem to be the case. -->
        <item name="android:minWidth">0dp</item>
        <item name="android:paddingStart">4dp</item>
        <item name="android:paddingEnd">12dp</item>
    </style>

    <style name="InfoTheme" parent="SettingsTheme">
        <item name="android:colorBackground">?attr/colorPrimary</item>
    </style>

    <style name="PopupMenu" parent="@style/Widget.AppCompat.Light.PopupMenu">
        <item name="overlapAnchor">true</item>
    </style>

    <style name="AppTheme.ContextMenuItem">

        <!-- All these attributes bellow need to be defined in a theme using android:theme
            otherwise they will have no effect... -->
        <item name="android:listPreferredItemHeightSmall">48dp</item>

        <!-- Set the padding to the children (menu item) of the NavigationView
             (instead of the NavigationView itself) allowing the hit targets
              to span the full width of the view. For more info, see
              https://github.com/mozilla-mobile/focus-android/pull/1466#discussion_r144679954.

              Note: listPreferredItemPaddingStart and listPreferredItemPaddingEnd
              don't work in this context because in the design_navigation_item.xml (layout for NavigationMenuItem)
              only listPreferredItemPaddingLeft and listPreferredItemPaddingRight attribute
              are used for paddingLeft and paddingRight properties.
              Check design_navigation_item.xml source here :
              https://android.googlesource.com/platform/frameworks/support.git/+/master/design/res/layout/design_navigation_item.xml
            -->
        <item name="listPreferredItemPaddingLeft">@dimen/dialogHorizontalPadding</item>
        <item name="listPreferredItemPaddingRight">@dimen/dialogHorizontalPadding</item>
    </style>

    <style name="ContextMenuTextAppearence">
        <item name="android:textSize">16sp</item>
        <item name="android:fontFamily">@string/font_roboto_medium</item>
        <item name="android:textStyle">normal</item>
        <item name="android:textColor">#FFFFFF</item>
    </style>


    <style name="DoorHanger">
        <item name="android:textColor">@color/snackbarTextColor</item>
        <item name="android:textColorLink">@color/doorhanger_link</item>
    </style>

    <style name="DoorHanger.Medium">
        <item name="android:textSize">16dp</item>
    </style>

    <style name="DoorHanger.Medium.Bold">
        <item name="android:fontFamily">sans-serif-medium</item>
    </style>

    <style name="DoorHanger.Medium.Light">
        <item name="android:fontFamily">sans-serif-light</item>
    </style>
</resources>
